# -*- coding: utf-8 -*-
"""EVA_Test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ziINO2vp_boapoA7pPygcGSc6cYyNl1a
"""

from tqdm import tqdm
import torch 
import torch.nn as nn
import torchvision
from torchsummary import summary
import torch.nn.functional as F
import torch.optim as optim

def test(model, device, test_loader,criterion):
  model.eval()
  test_loss=0
  correct=0
  with torch.no_grad():
    for data, target in test_loader:
      data, target = data.to(device), target.to(device)
      output = model(data)
      test_loss += criterion(output, target).sum().item()
      pred = output.data.max(1, keepdim=True)[1]
      correct += pred.eq(target.data.view_as(pred)).sum().item()

  test_loss /= len(test_loader.dataset)
  #test_losses.append(test_loss)

  print('\nTest set: loss: {:.6f}, Accuracy: {}/{} ({:.3f}%)\n'.format(
    test_loss, correct, len(test_loader.dataset),
    100. * correct / len(test_loader.dataset)))

  test_acc = (100. * correct / len(test_loader.dataset)) #test_acc.append(100. * correct / len(test_loader.dataset))

  return test_acc, test_loss